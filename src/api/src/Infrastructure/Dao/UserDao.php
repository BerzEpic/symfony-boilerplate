<?php
/*
 * This file has been automatically generated by TDBM.
 * You can edit this file as it will not be overwritten.
 */

declare(strict_types=1);

namespace App\Infrastructure\Dao;

use App\Domain\Model\User;
use App\Domain\Repository\UserRepository;
use App\Domain\Throwable\Exist\UserWithEmailExist;
use App\Domain\Throwable\NotFound\UserNotFoundByEmail;
use App\Domain\Throwable\NotFound\UserNotFoundById;
use App\Infrastructure\Dao\Generated\BaseUserDao;

/**
 * The UserDao class will maintain the persistence of User class into the users table.
 */
class UserDao extends BaseUserDao implements UserRepository
{
    /**
     * @throws UserNotFoundById
     */
    public function mustFindOneById(string $id) : User
    {
        $user = $this->findOne(['id' => $id]);

        if ($user !== null) {
            return $user;
        }

        throw new UserNotFoundById($id);
    }

    /**
     * @throws UserNotFoundByEmail
     */
    public function mustFindOneByEmail(string $email) : User
    {
        $user = $this->findOneByEmail($email);

        if ($user !== null) {
            return $user;
        }

        throw new UserNotFoundByEmail($email);
    }

    /**
     * @throws UserWithEmailExist
     */
    public function mustNotFindOneByEmail(string $email) : void
    {
        $user = $this->findOneByEmail($email);

        if ($user === null) {
            return;
        }

        throw new UserWithEmailExist($email);
    }
}
